
x86-linux-gnu-echo:     file format elf32-i386


Disassembly of section .init:

08048378 <_init>:
 8048378:	53                   	push   %ebx
 8048379:	83 ec 08             	sub    $0x8,%esp
 804837c:	e8 ef 00 00 00       	call   8048470 <__x86.get_pc_thunk.bx>
 8048381:	81 c3 7f 1c 00 00    	add    $0x1c7f,%ebx
 8048387:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 804838d:	85 c0                	test   %eax,%eax
 804838f:	74 05                	je     8048396 <_init+0x1e>
 8048391:	e8 5a 00 00 00       	call   80483f0 <__gmon_start__@plt>
 8048396:	83 c4 08             	add    $0x8,%esp
 8048399:	5b                   	pop    %ebx
 804839a:	c3                   	ret    

Disassembly of section .plt:

080483a0 <memmove@plt-0x10>:
 80483a0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483a6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483ac:	00 00                	add    %al,(%eax)
	...

080483b0 <memmove@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 00 00 00 00       	push   $0x0
 80483bb:	e9 e0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483c0 <free@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 08 00 00 00       	push   $0x8
 80483cb:	e9 d0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483d0 <strcpy@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483d6:	68 10 00 00 00       	push   $0x10
 80483db:	e9 c0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483e0 <malloc@plt>:
 80483e0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483e6:	68 18 00 00 00       	push   $0x18
 80483eb:	e9 b0 ff ff ff       	jmp    80483a0 <_init+0x28>

080483f0 <__gmon_start__@plt>:
 80483f0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483f6:	68 20 00 00 00       	push   $0x20
 80483fb:	e9 a0 ff ff ff       	jmp    80483a0 <_init+0x28>

08048400 <strchr@plt>:
 8048400:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048406:	68 28 00 00 00       	push   $0x28
 804840b:	e9 90 ff ff ff       	jmp    80483a0 <_init+0x28>

08048410 <strlen@plt>:
 8048410:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048416:	68 30 00 00 00       	push   $0x30
 804841b:	e9 80 ff ff ff       	jmp    80483a0 <_init+0x28>

08048420 <__libc_start_main@plt>:
 8048420:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048426:	68 38 00 00 00       	push   $0x38
 804842b:	e9 70 ff ff ff       	jmp    80483a0 <_init+0x28>

08048430 <putchar@plt>:
 8048430:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 8048436:	68 40 00 00 00       	push   $0x40
 804843b:	e9 60 ff ff ff       	jmp    80483a0 <_init+0x28>

Disassembly of section .text:

08048440 <_start>:
 8048440:	31 ed                	xor    %ebp,%ebp
 8048442:	5e                   	pop    %esi
 8048443:	89 e1                	mov    %esp,%ecx
 8048445:	83 e4 f0             	and    $0xfffffff0,%esp
 8048448:	50                   	push   %eax
 8048449:	54                   	push   %esp
 804844a:	52                   	push   %edx
 804844b:	68 e0 87 04 08       	push   $0x80487e0
 8048450:	68 70 87 04 08       	push   $0x8048770
 8048455:	51                   	push   %ecx
 8048456:	56                   	push   %esi
 8048457:	68 a4 85 04 08       	push   $0x80485a4
 804845c:	e8 bf ff ff ff       	call   8048420 <__libc_start_main@plt>
 8048461:	f4                   	hlt    
 8048462:	66 90                	xchg   %ax,%ax
 8048464:	66 90                	xchg   %ax,%ax
 8048466:	66 90                	xchg   %ax,%ax
 8048468:	66 90                	xchg   %ax,%ax
 804846a:	66 90                	xchg   %ax,%ax
 804846c:	66 90                	xchg   %ax,%ax
 804846e:	66 90                	xchg   %ax,%ax

08048470 <__x86.get_pc_thunk.bx>:
 8048470:	8b 1c 24             	mov    (%esp),%ebx
 8048473:	c3                   	ret    
 8048474:	66 90                	xchg   %ax,%ax
 8048476:	66 90                	xchg   %ax,%ax
 8048478:	66 90                	xchg   %ax,%ax
 804847a:	66 90                	xchg   %ax,%ax
 804847c:	66 90                	xchg   %ax,%ax
 804847e:	66 90                	xchg   %ax,%ax

08048480 <deregister_tm_clones>:
 8048480:	b8 83 a0 04 08       	mov    $0x804a083,%eax
 8048485:	2d 80 a0 04 08       	sub    $0x804a080,%eax
 804848a:	83 f8 06             	cmp    $0x6,%eax
 804848d:	77 01                	ja     8048490 <deregister_tm_clones+0x10>
 804848f:	c3                   	ret    
 8048490:	b8 00 00 00 00       	mov    $0x0,%eax
 8048495:	85 c0                	test   %eax,%eax
 8048497:	74 f6                	je     804848f <deregister_tm_clones+0xf>
 8048499:	55                   	push   %ebp
 804849a:	89 e5                	mov    %esp,%ebp
 804849c:	83 ec 18             	sub    $0x18,%esp
 804849f:	c7 04 24 80 a0 04 08 	movl   $0x804a080,(%esp)
 80484a6:	ff d0                	call   *%eax
 80484a8:	c9                   	leave  
 80484a9:	c3                   	ret    
 80484aa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

080484b0 <register_tm_clones>:
 80484b0:	b8 80 a0 04 08       	mov    $0x804a080,%eax
 80484b5:	2d 80 a0 04 08       	sub    $0x804a080,%eax
 80484ba:	c1 f8 02             	sar    $0x2,%eax
 80484bd:	89 c2                	mov    %eax,%edx
 80484bf:	c1 ea 1f             	shr    $0x1f,%edx
 80484c2:	01 d0                	add    %edx,%eax
 80484c4:	d1 f8                	sar    %eax
 80484c6:	75 01                	jne    80484c9 <register_tm_clones+0x19>
 80484c8:	c3                   	ret    
 80484c9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484ce:	85 d2                	test   %edx,%edx
 80484d0:	74 f6                	je     80484c8 <register_tm_clones+0x18>
 80484d2:	55                   	push   %ebp
 80484d3:	89 e5                	mov    %esp,%ebp
 80484d5:	83 ec 18             	sub    $0x18,%esp
 80484d8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484dc:	c7 04 24 80 a0 04 08 	movl   $0x804a080,(%esp)
 80484e3:	ff d2                	call   *%edx
 80484e5:	c9                   	leave  
 80484e6:	c3                   	ret    
 80484e7:	89 f6                	mov    %esi,%esi
 80484e9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484f0 <__do_global_dtors_aux>:
 80484f0:	80 3d 80 a0 04 08 00 	cmpb   $0x0,0x804a080
 80484f7:	75 13                	jne    804850c <__do_global_dtors_aux+0x1c>
 80484f9:	55                   	push   %ebp
 80484fa:	89 e5                	mov    %esp,%ebp
 80484fc:	83 ec 08             	sub    $0x8,%esp
 80484ff:	e8 7c ff ff ff       	call   8048480 <deregister_tm_clones>
 8048504:	c6 05 80 a0 04 08 01 	movb   $0x1,0x804a080
 804850b:	c9                   	leave  
 804850c:	f3 c3                	repz ret 
 804850e:	66 90                	xchg   %ax,%ax

08048510 <frame_dummy>:
 8048510:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048515:	85 c0                	test   %eax,%eax
 8048517:	74 1f                	je     8048538 <frame_dummy+0x28>
 8048519:	b8 00 00 00 00       	mov    $0x0,%eax
 804851e:	85 c0                	test   %eax,%eax
 8048520:	74 16                	je     8048538 <frame_dummy+0x28>
 8048522:	55                   	push   %ebp
 8048523:	89 e5                	mov    %esp,%ebp
 8048525:	83 ec 18             	sub    $0x18,%esp
 8048528:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804852f:	ff d0                	call   *%eax
 8048531:	c9                   	leave  
 8048532:	e9 79 ff ff ff       	jmp    80484b0 <register_tm_clones>
 8048537:	90                   	nop
 8048538:	e9 73 ff ff ff       	jmp    80484b0 <register_tm_clones>

0804853d <print_endline>:
 804853d:	55                   	push   %ebp
 804853e:	89 e5                	mov    %esp,%ebp
 8048540:	83 ec 28             	sub    $0x28,%esp
 8048543:	8b 45 08             	mov    0x8(%ebp),%eax
 8048546:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048549:	eb 17                	jmp    8048562 <print_endline+0x25>
 804854b:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804854e:	8d 50 01             	lea    0x1(%eax),%edx
 8048551:	89 55 f4             	mov    %edx,-0xc(%ebp)
 8048554:	0f b6 00             	movzbl (%eax),%eax
 8048557:	0f be c0             	movsbl %al,%eax
 804855a:	89 04 24             	mov    %eax,(%esp)
 804855d:	e8 ce fe ff ff       	call   8048430 <putchar@plt>
 8048562:	8b 45 f4             	mov    -0xc(%ebp),%eax
 8048565:	0f b6 00             	movzbl (%eax),%eax
 8048568:	84 c0                	test   %al,%al
 804856a:	75 df                	jne    804854b <print_endline+0xe>
 804856c:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)
 8048573:	e8 b8 fe ff ff       	call   8048430 <putchar@plt>
 8048578:	c9                   	leave  
 8048579:	c3                   	ret    

0804857a <print_strings>:
 804857a:	55                   	push   %ebp
 804857b:	89 e5                	mov    %esp,%ebp
 804857d:	83 ec 28             	sub    $0x28,%esp
 8048580:	8b 45 08             	mov    0x8(%ebp),%eax
 8048583:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048586:	eb 11                	jmp    8048599 <print_strings+0x1f>
 8048588:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804858b:	8b 00                	mov    (%eax),%eax
 804858d:	89 04 24             	mov    %eax,(%esp)
 8048590:	e8 a8 ff ff ff       	call   804853d <print_endline>
 8048595:	83 45 f4 04          	addl   $0x4,-0xc(%ebp)
 8048599:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804859c:	8b 00                	mov    (%eax),%eax
 804859e:	85 c0                	test   %eax,%eax
 80485a0:	75 e6                	jne    8048588 <print_strings+0xe>
 80485a2:	c9                   	leave  
 80485a3:	c3                   	ret    

080485a4 <main>:
 80485a4:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80485a8:	83 e4 f0             	and    $0xfffffff0,%esp
 80485ab:	ff 71 fc             	pushl  -0x4(%ecx)
 80485ae:	55                   	push   %ebp
 80485af:	89 e5                	mov    %esp,%ebp
 80485b1:	57                   	push   %edi
 80485b2:	56                   	push   %esi
 80485b3:	53                   	push   %ebx
 80485b4:	51                   	push   %ecx
 80485b5:	83 ec 48             	sub    $0x48,%esp
 80485b8:	89 cb                	mov    %ecx,%ebx
 80485ba:	89 e0                	mov    %esp,%eax
 80485bc:	89 c7                	mov    %eax,%edi
 80485be:	c7 45 c8 08 00 00 00 	movl   $0x8,-0x38(%ebp)
 80485c5:	8b 45 c8             	mov    -0x38(%ebp),%eax
 80485c8:	8b 13                	mov    (%ebx),%edx
 80485ca:	01 d0                	add    %edx,%eax
 80485cc:	83 c0 01             	add    $0x1,%eax
 80485cf:	89 45 cc             	mov    %eax,-0x34(%ebp)
 80485d2:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80485d5:	83 e8 01             	sub    $0x1,%eax
 80485d8:	89 45 d0             	mov    %eax,-0x30(%ebp)
 80485db:	8b 45 cc             	mov    -0x34(%ebp),%eax
 80485de:	c1 e0 02             	shl    $0x2,%eax
 80485e1:	8d 50 03             	lea    0x3(%eax),%edx
 80485e4:	b8 10 00 00 00       	mov    $0x10,%eax
 80485e9:	83 e8 01             	sub    $0x1,%eax
 80485ec:	01 d0                	add    %edx,%eax
 80485ee:	be 10 00 00 00       	mov    $0x10,%esi
 80485f3:	ba 00 00 00 00       	mov    $0x0,%edx
 80485f8:	f7 f6                	div    %esi
 80485fa:	6b c0 10             	imul   $0x10,%eax,%eax
 80485fd:	29 c4                	sub    %eax,%esp
 80485ff:	8d 44 24 0c          	lea    0xc(%esp),%eax
 8048603:	83 c0 03             	add    $0x3,%eax
 8048606:	c1 e8 02             	shr    $0x2,%eax
 8048609:	c1 e0 02             	shl    $0x2,%eax
 804860c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 804860f:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 8048616:	eb 4e                	jmp    8048666 <main+0xc2>
 8048618:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804861b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048622:	8b 43 04             	mov    0x4(%ebx),%eax
 8048625:	01 d0                	add    %edx,%eax
 8048627:	8b 30                	mov    (%eax),%esi
 8048629:	8b 45 c0             	mov    -0x40(%ebp),%eax
 804862c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8048633:	8b 43 04             	mov    0x4(%ebx),%eax
 8048636:	01 d0                	add    %edx,%eax
 8048638:	8b 00                	mov    (%eax),%eax
 804863a:	89 04 24             	mov    %eax,(%esp)
 804863d:	e8 ce fd ff ff       	call   8048410 <strlen@plt>
 8048642:	83 c0 01             	add    $0x1,%eax
 8048645:	89 04 24             	mov    %eax,(%esp)
 8048648:	e8 93 fd ff ff       	call   80483e0 <malloc@plt>
 804864d:	89 74 24 04          	mov    %esi,0x4(%esp)
 8048651:	89 04 24             	mov    %eax,(%esp)
 8048654:	e8 77 fd ff ff       	call   80483d0 <strcpy@plt>
 8048659:	8b 55 d4             	mov    -0x2c(%ebp),%edx
 804865c:	8b 4d c0             	mov    -0x40(%ebp),%ecx
 804865f:	89 04 8a             	mov    %eax,(%edx,%ecx,4)
 8048662:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 8048666:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8048669:	3b 03                	cmp    (%ebx),%eax
 804866b:	7c ab                	jl     8048618 <main+0x74>
 804866d:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 8048674:	e9 8f 00 00 00       	jmp    8048708 <main+0x164>
 8048679:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804867c:	8b 04 85 60 a0 04 08 	mov    0x804a060(,%eax,4),%eax
 8048683:	c7 44 24 04 20 00 00 	movl   $0x20,0x4(%esp)
 804868a:	00 
 804868b:	89 04 24             	mov    %eax,(%esp)
 804868e:	e8 6d fd ff ff       	call   8048400 <strchr@plt>
 8048693:	83 c0 01             	add    $0x1,%eax
 8048696:	89 45 d8             	mov    %eax,-0x28(%ebp)
 8048699:	c7 44 24 04 20 00 00 	movl   $0x20,0x4(%esp)
 80486a0:	00 
 80486a1:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80486a4:	89 04 24             	mov    %eax,(%esp)
 80486a7:	e8 54 fd ff ff       	call   8048400 <strchr@plt>
 80486ac:	89 45 dc             	mov    %eax,-0x24(%ebp)
 80486af:	8b 55 dc             	mov    -0x24(%ebp),%edx
 80486b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80486b5:	29 c2                	sub    %eax,%edx
 80486b7:	89 d0                	mov    %edx,%eax
 80486b9:	83 c0 01             	add    $0x1,%eax
 80486bc:	89 45 e0             	mov    %eax,-0x20(%ebp)
 80486bf:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80486c2:	89 04 24             	mov    %eax,(%esp)
 80486c5:	e8 16 fd ff ff       	call   80483e0 <malloc@plt>
 80486ca:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 80486cd:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80486d0:	89 44 24 08          	mov    %eax,0x8(%esp)
 80486d4:	8b 45 d8             	mov    -0x28(%ebp),%eax
 80486d7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80486db:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80486de:	89 04 24             	mov    %eax,(%esp)
 80486e1:	e8 ca fc ff ff       	call   80483b0 <memmove@plt>
 80486e6:	8b 45 e0             	mov    -0x20(%ebp),%eax
 80486e9:	8d 50 ff             	lea    -0x1(%eax),%edx
 80486ec:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 80486ef:	01 d0                	add    %edx,%eax
 80486f1:	c6 00 00             	movb   $0x0,(%eax)
 80486f4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 80486f7:	8b 55 c0             	mov    -0x40(%ebp),%edx
 80486fa:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 80486fd:	89 0c 90             	mov    %ecx,(%eax,%edx,4)
 8048700:	83 45 c4 01          	addl   $0x1,-0x3c(%ebp)
 8048704:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 8048708:	8b 45 c4             	mov    -0x3c(%ebp),%eax
 804870b:	3b 45 c8             	cmp    -0x38(%ebp),%eax
 804870e:	0f 8c 65 ff ff ff    	jl     8048679 <main+0xd5>
 8048714:	8b 45 cc             	mov    -0x34(%ebp),%eax
 8048717:	8d 50 ff             	lea    -0x1(%eax),%edx
 804871a:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804871d:	c7 04 90 00 00 00 00 	movl   $0x0,(%eax,%edx,4)
 8048724:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 8048727:	89 04 24             	mov    %eax,(%esp)
 804872a:	e8 4b fe ff ff       	call   804857a <print_strings>
 804872f:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 8048736:	eb 15                	jmp    804874d <main+0x1a9>
 8048738:	8b 45 d4             	mov    -0x2c(%ebp),%eax
 804873b:	8b 55 c0             	mov    -0x40(%ebp),%edx
 804873e:	8b 04 90             	mov    (%eax,%edx,4),%eax
 8048741:	89 04 24             	mov    %eax,(%esp)
 8048744:	e8 77 fc ff ff       	call   80483c0 <free@plt>
 8048749:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 804874d:	8b 45 c0             	mov    -0x40(%ebp),%eax
 8048750:	3b 45 cc             	cmp    -0x34(%ebp),%eax
 8048753:	7c e3                	jl     8048738 <main+0x194>
 8048755:	b8 00 00 00 00       	mov    $0x0,%eax
 804875a:	89 fc                	mov    %edi,%esp
 804875c:	8d 65 f0             	lea    -0x10(%ebp),%esp
 804875f:	59                   	pop    %ecx
 8048760:	5b                   	pop    %ebx
 8048761:	5e                   	pop    %esi
 8048762:	5f                   	pop    %edi
 8048763:	5d                   	pop    %ebp
 8048764:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048767:	c3                   	ret    
 8048768:	66 90                	xchg   %ax,%ax
 804876a:	66 90                	xchg   %ax,%ax
 804876c:	66 90                	xchg   %ax,%ax
 804876e:	66 90                	xchg   %ax,%ax

08048770 <__libc_csu_init>:
 8048770:	55                   	push   %ebp
 8048771:	57                   	push   %edi
 8048772:	31 ff                	xor    %edi,%edi
 8048774:	56                   	push   %esi
 8048775:	53                   	push   %ebx
 8048776:	e8 f5 fc ff ff       	call   8048470 <__x86.get_pc_thunk.bx>
 804877b:	81 c3 85 18 00 00    	add    $0x1885,%ebx
 8048781:	83 ec 1c             	sub    $0x1c,%esp
 8048784:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048788:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804878e:	e8 e5 fb ff ff       	call   8048378 <_init>
 8048793:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048799:	29 c6                	sub    %eax,%esi
 804879b:	c1 fe 02             	sar    $0x2,%esi
 804879e:	85 f6                	test   %esi,%esi
 80487a0:	74 27                	je     80487c9 <__libc_csu_init+0x59>
 80487a2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80487a8:	8b 44 24 38          	mov    0x38(%esp),%eax
 80487ac:	89 2c 24             	mov    %ebp,(%esp)
 80487af:	89 44 24 08          	mov    %eax,0x8(%esp)
 80487b3:	8b 44 24 34          	mov    0x34(%esp),%eax
 80487b7:	89 44 24 04          	mov    %eax,0x4(%esp)
 80487bb:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80487c2:	83 c7 01             	add    $0x1,%edi
 80487c5:	39 f7                	cmp    %esi,%edi
 80487c7:	75 df                	jne    80487a8 <__libc_csu_init+0x38>
 80487c9:	83 c4 1c             	add    $0x1c,%esp
 80487cc:	5b                   	pop    %ebx
 80487cd:	5e                   	pop    %esi
 80487ce:	5f                   	pop    %edi
 80487cf:	5d                   	pop    %ebp
 80487d0:	c3                   	ret    
 80487d1:	eb 0d                	jmp    80487e0 <__libc_csu_fini>
 80487d3:	90                   	nop
 80487d4:	90                   	nop
 80487d5:	90                   	nop
 80487d6:	90                   	nop
 80487d7:	90                   	nop
 80487d8:	90                   	nop
 80487d9:	90                   	nop
 80487da:	90                   	nop
 80487db:	90                   	nop
 80487dc:	90                   	nop
 80487dd:	90                   	nop
 80487de:	90                   	nop
 80487df:	90                   	nop

080487e0 <__libc_csu_fini>:
 80487e0:	f3 c3                	repz ret 

Disassembly of section .fini:

080487e4 <_fini>:
 80487e4:	53                   	push   %ebx
 80487e5:	83 ec 08             	sub    $0x8,%esp
 80487e8:	e8 83 fc ff ff       	call   8048470 <__x86.get_pc_thunk.bx>
 80487ed:	81 c3 13 18 00 00    	add    $0x1813,%ebx
 80487f3:	83 c4 08             	add    $0x8,%esp
 80487f6:	5b                   	pop    %ebx
 80487f7:	c3                   	ret    
